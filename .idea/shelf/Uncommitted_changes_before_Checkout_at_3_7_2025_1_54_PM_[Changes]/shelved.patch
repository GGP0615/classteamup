Index: src/components/auth/SignInForm.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use client'\r\n\r\nimport { useState } from 'react'\r\nimport { createClient } from '@/lib/supabase'\r\nimport Button from '@/components/ui/Button'\r\nimport { useRouter } from 'next/navigation'\r\nimport Link from 'next/link'\r\nimport toast from 'react-hot-toast'\r\n\r\nexport default function SignInForm() {\r\n  const router = useRouter()\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '',\r\n  })\r\n  const [loading, setLoading] = useState(false)\r\n  const [error, setError] = useState<string | null>(null)\r\n  const supabase = createClient()\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    setLoading(true)\r\n    setError(null)\r\n    console.log('Starting sign in process...')\r\n\r\n    try {\r\n      // Sign in the user\r\n      console.log('Attempting to sign in...')\r\n      const { data, error: signInError } = await supabase.auth.signInWithPassword({\r\n        email: formData.email,\r\n        password: formData.password,\r\n      })\r\n\r\n      if (signInError) {\r\n        console.error('Sign in error:', signInError)\r\n        if (signInError.message.includes('rate limit')) {\r\n          setError('Too many login attempts. Please wait a few minutes and try again.')\r\n        } else {\r\n          setError(signInError.message)\r\n        }\r\n        return\r\n      }\r\n\r\n      console.log('Sign in successful:', data)\r\n\r\n      if (!data?.user) {\r\n        console.error('No user data returned')\r\n        throw new Error('No user data returned')\r\n      }\r\n\r\n      // Verify user profile exists\r\n      console.log('Fetching user profile...')\r\n      const { data: profile, error: profileError } = await supabase\r\n        .from('users')\r\n        .select('id, email, full_name, role')\r\n        .eq('id', data.user.id)\r\n        .single()\r\n\r\n      if (profileError) {\r\n        console.error('Profile fetch error:', profileError)\r\n        throw profileError\r\n      }\r\n\r\n      if (!profile) {\r\n        console.error('No profile found')\r\n        throw new Error('User profile not found')\r\n      }\r\n\r\n      console.log('Profile found:', profile)\r\n\r\n      // Force a revalidation of the session\r\n      console.log('Refreshing session...')\r\n      await supabase.auth.refreshSession()\r\n\r\n      // Get the current session\r\n      const { data: { session }, error: sessionError } = await supabase.auth.getSession()\r\n      \r\n      if (sessionError) {\r\n        console.error('Session error:', sessionError)\r\n        throw new Error('Failed to establish session')\r\n      }\r\n\r\n      if (!session) {\r\n        console.error('No session established')\r\n        throw new Error('No session established')\r\n      }\r\n\r\n      console.log('Session established:', session)\r\n      \r\n      // Set auth cookie\r\n      const response = await fetch('/api/auth/session', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ session }),\r\n      })\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to set session cookie')\r\n      }\r\n\r\n      console.log('Session cookie set, redirecting...')\r\n      toast.success('Signed in successfully')\r\n      \r\n      // Update redirect path based on user role\r\n      if (profile.role === 'student') {\r\n        window.location.href = '/student-dashboard'\r\n      } else {\r\n        window.location.href = '/dashboard'\r\n      }\r\n    } catch (error: any) {\r\n      console.error('Full error object:', error)\r\n      setError(error.message)\r\n      toast.error(error.message)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n      <div className=\"max-w-md w-full space-y-8\">\r\n        <div>\r\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\r\n            Sign in to ClassTeamUp\r\n          </h2>\r\n        </div>\r\n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\r\n          <div className=\"rounded-md shadow-sm space-y-4\">\r\n            <div>\r\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\r\n                Email\r\n              </label>\r\n              <input\r\n                id=\"email\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                required\r\n                value={formData.email}\r\n                onChange={(e) => setFormData({ ...formData, email: e.target.value })}\r\n                className=\"mt-1 appearance-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\r\n                disabled={loading}\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\r\n                Password\r\n              </label>\r\n              <input\r\n                id=\"password\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                required\r\n                value={formData.password}\r\n                onChange={(e) => setFormData({ ...formData, password: e.target.value })}\r\n                className=\"mt-1 appearance-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\r\n                disabled={loading}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {error && (\r\n            <div className=\"text-red-500 text-sm text-center\">\r\n              {error}\r\n            </div>\r\n          )}\r\n\r\n          <div>\r\n            <Button\r\n              type=\"submit\"\r\n              className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n              disabled={loading}\r\n            >\r\n              {loading ? 'Signing in...' : 'Sign in'}\r\n            </Button>\r\n          </div>\r\n        </form>\r\n\r\n        <div className=\"text-center\">\r\n          <Link\r\n            href=\"/auth/signup\"\r\n            className=\"text-indigo-600 hover:text-indigo-500\"\r\n          >\r\n            Don't have an account? Sign up\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/auth/SignInForm.tsx b/src/components/auth/SignInForm.tsx
--- a/src/components/auth/SignInForm.tsx	(revision 615dfbf13938b38eba006e51ea3c8eb73e40f854)
+++ b/src/components/auth/SignInForm.tsx	(date 1741218802526)
@@ -6,6 +6,8 @@
 import { useRouter } from 'next/navigation'
 import Link from 'next/link'
 import toast from 'react-hot-toast'
+import Image from 'next/image'
+import Image from 'public/ClassTeamUp.svg'
 
 export default function SignInForm() {
   const router = useRouter()
@@ -74,7 +76,7 @@
 
       // Get the current session
       const { data: { session }, error: sessionError } = await supabase.auth.getSession()
-      
+
       if (sessionError) {
         console.error('Session error:', sessionError)
         throw new Error('Failed to establish session')
@@ -86,7 +88,7 @@
       }
 
       console.log('Session established:', session)
-      
+
       // Set auth cookie
       const response = await fetch('/api/auth/session', {
         method: 'POST',
@@ -102,7 +104,7 @@
 
       console.log('Session cookie set, redirecting...')
       toast.success('Signed in successfully')
-      
+
       // Update redirect path based on user role
       if (profile.role === 'student') {
         window.location.href = '/student-dashboard'
@@ -120,8 +122,17 @@
 
   return (
     <div className="min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8">
-      <div className="max-w-md w-full space-y-8">
+      <div className="max-w-lg w-full space-y-8"> {/* Changed max-w-md to max-w-lg */}
         <div>
+           {/* ClassTeamUp Logo */}
+          <div className="flex justify-center mb-4">
+            <Image
+              src="/logo.png"  //  path to logo image
+              alt="ClassTeamUp Logo"
+              width={150}      // Adjust as needed
+              height={75}     // Adjust as needed, maintain aspect ratio
+            />
+          </div>
           <h2 className="mt-6 text-center text-3xl font-extrabold text-gray-900">
             Sign in to ClassTeamUp
           </h2>
Index: src/components/dashboard/Navbar.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use client'\r\n\r\nimport { useState, useEffect } from 'react'\r\nimport { createClient } from '@/lib/supabase'\r\nimport { useRouter } from 'next/navigation'\r\nimport Image from 'next/image'\r\nimport { Menu, Bell, Settings, LogOut, Loader2 } from 'lucide-react'\r\nimport { toast } from 'react-hot-toast'\r\nimport { useProfileStore } from '@/store/useProfileStore'\r\nimport logo from '/public/logo.svg';\r\n\r\ninterface NavbarProps {\r\n  user?: {\r\n    id: string \r\n    full_name: string\r\n    email: string\r\n    role: string\r\n  }\r\n}\r\n\r\nexport default function Navbar({ user }: NavbarProps) {\r\n  const [isProfileOpen, setIsProfileOpen] = useState(false)\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false)\r\n  const router = useRouter()\r\n  const supabase = createClient()\r\n  const { avatarUrl, updateAvatarUrl, isLoading, setLoading } = useProfileStore()\r\n\r\n  // Add this useEffect to load the avatar URL on mount\r\n  useEffect(() => {\r\n    const loadProfileImage = async () => {\r\n      try {\r\n        if (!user) return\r\n\r\n        setLoading(true)\r\n        const { data, error } = await supabase\r\n          .from('users')\r\n          .select('avatar_url')\r\n          .eq('id', user.id)\r\n          .single()\r\n\r\n        if (error) throw error\r\n        \r\n        if (data?.avatar_url) {\r\n          updateAvatarUrl(data.avatar_url)\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading profile image:', error)\r\n      } finally {\r\n        setLoading(false)\r\n      }\r\n    }\r\n\r\n    loadProfileImage()\r\n  }, [user?.id]) // Depend on user.id to reload if user changes\r\n\r\n  // If no user, show loading state or minimal navbar\r\n  if (!user) {\r\n    return (\r\n      <nav className=\"bg-gradient-to-r from-[#18A5A7] to-[#BFFFE9] shadow-sm text-white\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex justify-between h-16\">\r\n            <div className=\"flex-shrink-0 flex items-center\">\r\n              <Image\r\n                src=\"/logo.svg\"\r\n                alt=\"ClassTeamUp\"\r\n                width={40}\r\n                height={40}\r\n                className=\"h-8 w-auto\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n  }\r\n\r\n  const handleSignOut = async () => {\r\n    try {\r\n      const { error } = await supabase.auth.signOut()\r\n      if (error) throw error\r\n\r\n      toast.success('Signed out successfully')\r\n      router.replace('/auth/signin')\r\n    } catch (error) {\r\n      toast.error('Error signing out')\r\n      console.error('Sign out error:', error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <nav className=\"bg-gradient-to-r from-[#18A5A7] to-[#BFFFE9] shadow-sm text-white\">\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"flex justify-between h-16\">\r\n          <div className=\"flex\">\r\n            <button\r\n              className=\"md:hidden px-4 inline-flex items-center\"\r\n              onClick={() => setIsMenuOpen(!isMenuOpen)}\r\n            >\r\n              <Menu className=\"h-6 w-6\" />\r\n            </button>\r\n            <div className=\"flex-shrink-0 flex items-center\">\r\n              <Image\r\n                src=\"/logo.svg\"\r\n                alt=\"ClassTeamUp\"\r\n                width={40}\r\n                height={40}\r\n                className=\"h-8 w-auto\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex items-center\">\r\n            <button className=\"p-2 rounded-full hover:bg-opacity-80 text-white\">\r\n              <Bell className=\"h-6 w-6\" />\r\n            </button>**\r\n\r\n            <div className=\"ml-3 relative\">\r\n              <button\r\n                className=\"flex items-center rounded-full text-sm focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 text-white\"\r\n                onClick={() => setIsProfileOpen(!isProfileOpen)}\r\n              >\r\n                <span className=\"sr-only\">Open user menu</span>\r\n                <div className=\"relative h-8 w-8 rounded-full overflow-hidden\">\r\n                  {isLoading ? (\r\n                    <div className=\"absolute inset-0 flex items-center justify-center bg-gray-100\">\r\n                      <Loader2 className=\"h-4 w-4 text-gray-600 animate-spin\" />\r\n                    </div>\r\n                  ) : avatarUrl ? (\r\n                    <img\r\n                      src={avatarUrl}\r\n                      alt=\"Profile\"\r\n                      className=\"h-full w-full object-cover transition-opacity\"\r\n                      onError={(e) => {\r\n                        const target = e.target as HTMLImageElement\r\n                        target.style.display = 'none'\r\n                      }}\r\n                    />\r\n                  ) : (\r\n                    <div className=\"h-full w-full bg-indigo-600 flex items-center justify-center transition-colors text-white\">\r\n                      <span className=\"text-sm font-medium text-white\">\r\n                        {user.full_name[0]?.toUpperCase()}\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </button>\r\n\r\n              {isProfileOpen && (\r\n                <div\r\n                  className=\"absolute right-0 mt-2 w-48 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 z-50 text-gray-700\"\r\n                  style={{\r\n                    minWidth: '200px',\r\n                    maxWidth: '280px'\r\n                  }}\r\n                >\r\n                  <div className=\"py-1\">\r\n                    <div className=\"px-4 py-3 text-sm text-gray-700 border-b\">\r\n                      <p className=\"font-medium truncate\">{user.full_name}</p>\r\n                      <p className=\"text-gray-500 truncate\">{user.email}</p>\r\n                    </div>\r\n                    <button\r\n                      onClick={() => router.push('/settings/profile')}\r\n                      className=\"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 flex items-center\"\r\n                    >\r\n                      <Settings className=\"h-4 w-4 mr-2\" />\r\n                      Settings\r\n                    </button>\r\n                    <button\r\n                      onClick={handleSignOut}\r\n                      className=\"w-full text-left px-4 py-2 text-sm text-red-700 hover:bg-gray-100 flex items-center\"\r\n                    >\r\n                      <LogOut className=\"h-4 w-4 mr-2\" />\r\n                      Sign out\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nconst styles = `\r\n.fixed-width-container {\r\n  width: 32px; /* Same as h-8 */\r\n  height: 32px; /* Same as w-8 */\r\n  display: inline-block;\r\n}\r\n`
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/dashboard/Navbar.tsx b/src/components/dashboard/Navbar.tsx
--- a/src/components/dashboard/Navbar.tsx	(revision 615dfbf13938b38eba006e51ea3c8eb73e40f854)
+++ b/src/components/dashboard/Navbar.tsx	(date 1741220403304)
@@ -1,192 +1,208 @@
 'use client'
 
-import { useState, useEffect } from 'react'
+import { useState } from 'react'
 import { createClient } from '@/lib/supabase'
+import Button from '@/components/ui/Button'
 import { useRouter } from 'next/navigation'
+import Link from 'next/link'
+import toast from 'react-hot-toast'
 import Image from 'next/image'
-import { Menu, Bell, Settings, LogOut, Loader2 } from 'lucide-react'
-import { toast } from 'react-hot-toast'
-import { useProfileStore } from '@/store/useProfileStore'
-import logo from '/public/logo.svg';
+import Image from 'public/CTU.svg'
 
-interface NavbarProps {
-  user?: {
-    id: string 
-    full_name: string
-    email: string
-    role: string
-  }
-}
-
-export default function Navbar({ user }: NavbarProps) {
-  const [isProfileOpen, setIsProfileOpen] = useState(false)
-  const [isMenuOpen, setIsMenuOpen] = useState(false)
+export default function SignInForm() {
   const router = useRouter()
+  const [formData, setFormData] = useState({
+    email: '',
+    password: '',
+  })
+  const [loading, setLoading] = useState(false)
+  const [error, setError] = useState<string | null>(null)
   const supabase = createClient()
-  const { avatarUrl, updateAvatarUrl, isLoading, setLoading } = useProfileStore()
 
-  // Add this useEffect to load the avatar URL on mount
-  useEffect(() => {
-    const loadProfileImage = async () => {
-      try {
-        if (!user) return
-
-        setLoading(true)
-        const { data, error } = await supabase
-          .from('users')
-          .select('avatar_url')
-          .eq('id', user.id)
-          .single()
+  const handleSubmit = async (e: React.FormEvent) => {
+    e.preventDefault()
+    setLoading(true)
+    setError(null)
+    console.log('Starting sign in process...')
+
+    try {
+      // Sign in the user
+      console.log('Attempting to sign in...')
+      const { data, error: signInError } = await supabase.auth.signInWithPassword({
+        email: formData.email,
+        password: formData.password,
+      })
+
+      if (signInError) {
+        console.error('Sign in error:', signInError)
+        if (signInError.message.includes('rate limit')) {
+          setError('Too many login attempts. Please wait a few minutes and try again.')
+        } else {
+          setError(signInError.message)
+        }
+        return
+      }
+
+      console.log('Sign in successful:', data)
+
+      if (!data?.user) {
+        console.error('No user data returned')
+        throw new Error('No user data returned')
+      }
+
+      // Verify user profile exists
+      console.log('Fetching user profile...')
+      const { data: profile, error: profileError } = await supabase
+        .from('users')
+        .select('id, email, full_name, role')
+        .eq('id', data.user.id)
+        .single()
 
-        if (error) throw error
-        
-        if (data?.avatar_url) {
-          updateAvatarUrl(data.avatar_url)
-        }
-      } catch (error) {
-        console.error('Error loading profile image:', error)
-      } finally {
-        setLoading(false)
-      }
-    }
+      if (profileError) {
+        console.error('Profile fetch error:', profileError)
+        throw profileError
+      }
+
+      if (!profile) {
+        console.error('No profile found')
+        throw new Error('User profile not found')
+      }
+
+      console.log('Profile found:', profile)
+
+      // Force a revalidation of the session
+      console.log('Refreshing session...')
+      await supabase.auth.refreshSession()
+
+      // Get the current session
+      const { data: { session }, error: sessionError } = await supabase.auth.getSession()
+
+      if (sessionError) {
+        console.error('Session error:', sessionError)
+        throw new Error('Failed to establish session')
+      }
+
+      if (!session) {
+        console.error('No session established')
+        throw new Error('No session established')
+      }
+
+      console.log('Session established:', session)
+
+      // Set auth cookie
+      const response = await fetch('/api/auth/session', {
+        method: 'POST',
+        headers: {
+          'Content-Type': 'application/json',
+        },
+        body: JSON.stringify({ session }),
+      })
+
+      if (!response.ok) {
+        throw new Error('Failed to set session cookie')
+      }
+
+      console.log('Session cookie set, redirecting...')
+      toast.success('Signed in successfully')
+
+      // Update redirect path based on user role
+      if (profile.role === 'student') {
+        window.location.href = '/student-dashboard'
+      } else {
+        window.location.href = '/dashboard'
+      }
+    } catch (error: any) {
+      console.error('Full error object:', error)
+      setError(error.message)
+      toast.error(error.message)
+    } finally {
+      setLoading(false)
+    }
+  }
 
-    loadProfileImage()
-  }, [user?.id]) // Depend on user.id to reload if user changes
-
-  // If no user, show loading state or minimal navbar
-  if (!user) {
-    return (
-      <nav className="bg-gradient-to-r from-[#18A5A7] to-[#BFFFE9] shadow-sm text-white">
-        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
-          <div className="flex justify-between h-16">
-            <div className="flex-shrink-0 flex items-center">
-              <Image
-                src="/logo.svg"
-                alt="ClassTeamUp"
-                width={40}
-                height={40}
-                className="h-8 w-auto"
-              />
-            </div>
-          </div>
-        </div>
-      </nav>
-    )
-  }
-
-  const handleSignOut = async () => {
-    try {
-      const { error } = await supabase.auth.signOut()
-      if (error) throw error
-
-      toast.success('Signed out successfully')
-      router.replace('/auth/signin')
-    } catch (error) {
-      toast.error('Error signing out')
-      console.error('Sign out error:', error)
-    }
-  }
-
   return (
-    <nav className="bg-gradient-to-r from-[#18A5A7] to-[#BFFFE9] shadow-sm text-white">
-      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
-        <div className="flex justify-between h-16">
-          <div className="flex">
-            <button
-              className="md:hidden px-4 inline-flex items-center"
-              onClick={() => setIsMenuOpen(!isMenuOpen)}
-            >
-              <Menu className="h-6 w-6" />
-            </button>
-            <div className="flex-shrink-0 flex items-center">
-              <Image
-                src="/logo.svg"
-                alt="ClassTeamUp"
-                width={40}
-                height={40}
-                className="h-8 w-auto"
-              />
-            </div>
-          </div>
-
-          <div className="flex items-center">
-            <button className="p-2 rounded-full hover:bg-opacity-80 text-white">
-              <Bell className="h-6 w-6" />
-            </button>**
-
-            <div className="ml-3 relative">
-              <button
-                className="flex items-center rounded-full text-sm focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 text-white"
-                onClick={() => setIsProfileOpen(!isProfileOpen)}
-              >
-                <span className="sr-only">Open user menu</span>
-                <div className="relative h-8 w-8 rounded-full overflow-hidden">
-                  {isLoading ? (
-                    <div className="absolute inset-0 flex items-center justify-center bg-gray-100">
-                      <Loader2 className="h-4 w-4 text-gray-600 animate-spin" />
-                    </div>
-                  ) : avatarUrl ? (
-                    <img
-                      src={avatarUrl}
-                      alt="Profile"
-                      className="h-full w-full object-cover transition-opacity"
-                      onError={(e) => {
-                        const target = e.target as HTMLImageElement
-                        target.style.display = 'none'
-                      }}
-                    />
-                  ) : (
-                    <div className="h-full w-full bg-indigo-600 flex items-center justify-center transition-colors text-white">
-                      <span className="text-sm font-medium text-white">
-                        {user.full_name[0]?.toUpperCase()}
-                      </span>
-                    </div>
-                  )}
-                </div>
-              </button>
+    <div className="min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8">
+      <div className="max-w-md w-full space-y-8">
+        <div className="flex flex-col items-center">
+          <Image
+            src="/CTU.svg"
+            alt="ClassTeamUp Logo"
+            width={80}
+            height={80}
+            className="mb-4"
+          />
+          <h2 className="text-center text-3xl font-extrabold text-gray-900">
+            Sign in to ClassTeamUp
+          </h2>
+        </div>
+        <form className="mt-8 space-y-6" onSubmit={handleSubmit}>
+          <div className="rounded-md shadow-sm space-y-4">
+            <div>
+              <label htmlFor="email" className="block text-sm font-medium text-gray-700">
+                Email
+              </label>
+              <input
+                id="email"
+                name="email"
+                type="email"
+                required
+                value={formData.email}
+                onChange={(e) => setFormData({ ...formData, email: e.target.value })}
+                className="mt-1 appearance-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm"
+                disabled={loading}
+              />
+            </div>
+            <div>
+              <label htmlFor="password" className="block text-sm font-medium text-gray-700">
+                Password
+              </label>
+              <input
+                id="password"
+                name="password"
+                type="password"
+                required
+                value={formData.password}
+                onChange={(e) => setFormData({ ...formData, password: e.target.value })}
+                className="mt-1 appearance-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm"
+                disabled={loading}
+              />
+              <div className="mt-2 text-right">
+                <Link
+                  href="/auth/forgot-password"
+                  className="text-sm text-indigo-600 hover:text-indigo-500"
+                >
+                  Forgot your password?
+                </Link>
+              </div>
+            </div>
+          </div>
 
-              {isProfileOpen && (
-                <div
-                  className="absolute right-0 mt-2 w-48 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 z-50 text-gray-700"
-                  style={{
-                    minWidth: '200px',
-                    maxWidth: '280px'
-                  }}
-                >
-                  <div className="py-1">
-                    <div className="px-4 py-3 text-sm text-gray-700 border-b">
-                      <p className="font-medium truncate">{user.full_name}</p>
-                      <p className="text-gray-500 truncate">{user.email}</p>
-                    </div>
-                    <button
-                      onClick={() => router.push('/settings/profile')}
-                      className="w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 flex items-center"
-                    >
-                      <Settings className="h-4 w-4 mr-2" />
-                      Settings
-                    </button>
-                    <button
-                      onClick={handleSignOut}
-                      className="w-full text-left px-4 py-2 text-sm text-red-700 hover:bg-gray-100 flex items-center"
-                    >
-                      <LogOut className="h-4 w-4 mr-2" />
-                      Sign out
-                    </button>
-                  </div>
-                </div>
-              )}
-            </div>
-          </div>
-        </div>
-      </div>
-    </nav>
+          {error && (
+            <div className="text-red-500 text-sm text-center">
+              {error}
+            </div>
+          )}
+
+          <div>
+            <Button
+              type="submit"
+              className="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
+              disabled={loading}
+            >
+              {loading ? 'Signing in...' : 'Sign in'}
+            </Button>
+          </div>
+        </form>
+
+        <div className="text-center">
+          <Link
+            href="/auth/signup"
+            className="text-indigo-600 hover:text-indigo-500"
+          >
+            Don't have an account? Sign up
+          </Link>
+        </div>
+      </div>
+    </div>
   )
-}
-
-const styles = `
-.fixed-width-container {
-  width: 32px; /* Same as h-8 */
-  height: 32px; /* Same as w-8 */
-  display: inline-block;
-}
-`
\ No newline at end of file
+}
\ No newline at end of file
Index: public/site.webmanifest
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/public/site.webmanifest b/public/site.webmanifest
new file mode 100644
--- /dev/null	(date 1741199404779)
+++ b/public/site.webmanifest	(date 1741199404779)
@@ -0,0 +1,1 @@
+{"name":"","short_name":"","icons":[{"src":"/android-chrome-192x192.png","sizes":"192x192","type":"image/png"},{"src":"/android-chrome-512x512.png","sizes":"512x512","type":"image/png"}],"theme_color":"#ffffff","background_color":"#ffffff","display":"standalone"}
\ No newline at end of file
